{"version":3,"sources":["components/charts/chart.component.ts"],"names":["ChartComponent","dashboardService","_this","this","title","getContainerStatus","getContainerScanStatus","subscribe","result","containerStatus","console","warn","options","text","series","name","data","allowPointSelect","chart3Options","colorByPoint","y","sliced","selected","barOptions","chart","type","xAxis","categories","yAxis","pieOptions","prototype","ngOnInit","__decorate","core_1","Component","selector","templateUrl","__param","Inject"],"mappings":"w5BAcaA,eAAc,WAavB,QAAAA,gBAAkDC,kBAAlD,GAAAC,OAAAC,IAAkDA,MAAAF,iBAAAA,iBAZlDE,KAAAC,MAAgB,SA+GhBD,KAAAE,mBAAqB,WACjBH,MAAKD,iBAAiBK,yBAA2CC,UAAU,SAAAC,QACvEN,MAAKO,gBAAkBD,OACvBE,QAAQC,KAAKT,MAAKO,oBArGtBN,KAAKS,SACDR,OAASS,KAAM,+BACfC,SACIC,KAAM,KACNC,MAAO,EAAG,EAAG,EAAG,EAAG,IACnBC,kBAAkB,IAElBF,KAAM,KACNC,OAAO,GAAI,GAAI,GAAI,GAAI,IACvBC,kBAAkB,KAI1Bd,KAAKe,eACDd,OAASS,KAAM,gBACfC,SACIC,KAAM,SACNI,cAAc,EACdH,OACID,KAAM,8BACNK,EAAG,QAEHL,KAAM,SACNK,EAAG,MACHC,QAAQ,EACRC,UAAU,IAEVP,KAAM,UACNK,EAAG,QAEHL,KAAM,SACNK,EAAG,OAEHL,KAAM,QACNK,EAAG,MAEHL,KAAM,8BACNK,EAAG,QAKfjB,KAAKoB,YAEDC,OAASC,KAAM,OACXrB,OACIS,KAAM,qBAEVa,OACIC,YAAa,SAAU,UAAW,YAEtCC,OACIxB,OACIS,KAAM,gBAGdC,SACIC,KAAM,OACNC,MAAO,EAAG,EAAG,KAEbD,KAAM,OACNC,MAAO,EAAG,EAAG,MAIzBb,KAAK0B,YACDzB,OAASS,KAAM,aACfW,OAASC,KAAM,OAEfX,SACIC,KAAM,SACNI,cAAc,EACdH,OACID,KAAM,8BACNK,EAAG,QAEHL,KAAM,SACNK,EAAG,MACHC,QAAQ,EACRC,UAAU,IAEVP,KAAM,UACNK,EAAG,QAEHL,KAAM,SACNK,EAAG,OAEHL,KAAM,QACNK,EAAG,MAEHL,KAAM,8BACNK,EAAG,QAgBvB,MA/GIpB,gBAAA8B,UAAAC,SAAA,WACI5B,KAAKE,sBA8GbL,kBAzHaA,eAAcgC,YAL1BC,OAAAC,WACGC,SAAU,SACVC,YAAa,iDAgBCC,QAAA,EAAAJ,OAAAK,OAAO,gEAbZtC","file":"chart.component.js","sourcesContent":["import { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\r\nimport { NgModule, Component, Inject, forwardRef, Injector, OpaqueToken } from \"@angular/core\";\r\n\r\nimport { BrowserModule } from '@angular/platform-browser';\r\nimport { ChartModule } from 'angular2-highcharts';\r\nimport { IDashboardService } from \"../../interfaces/interfaces\";\r\nimport { DashboardService } from \"../../services/dashboardService\";\r\nimport { IResponse, IContainerScanned, IContainerStatus } from \"../../models/viewModels\";\r\n\r\n@Component({\r\n    selector: \"charts\",\r\n    templateUrl: \"/view/components/charts/chart.component.html\"\r\n})\r\n\r\nexport class ChartComponent {\r\n    title: string = \"Charts\";\r\n    options: any;\r\n    pieOptions: any;\r\n    chart3Options: any;\r\n    barOptions: any;\r\n\r\n    containerStatus: IContainerStatus;\r\n\r\n    //getContainerStatus: () => void;\r\n    ngOnInit() {\r\n        this.getContainerStatus();\r\n    }\r\n    constructor( @Inject('IDashboardService') private dashboardService: IDashboardService) {\r\n        this.options = {\r\n            title: { text: 'angular2-highcharts example' },\r\n            series: [{\r\n                name: 's1',\r\n                data: [2, 3, 5, 8, 13],\r\n                allowPointSelect: true\r\n            }, {\r\n                name: 's2',\r\n                data: [-2, -3, -5, -8, -13],\r\n                allowPointSelect: true\r\n            }]\r\n        };\r\n\r\n        this.chart3Options = {\r\n            title: { text: 'simple chart' },\r\n            series: [{\r\n                name: 'Brands',\r\n                colorByPoint: true,\r\n                data: [{\r\n                    name: 'Microsoft Internet Explorer',\r\n                    y: 56.33\r\n                }, {\r\n                    name: 'Chrome',\r\n                    y: 24.03,\r\n                    sliced: true,\r\n                    selected: true\r\n                }, {\r\n                    name: 'Firefox',\r\n                    y: 10.38\r\n                }, {\r\n                    name: 'Safari',\r\n                    y: 4.77\r\n                }, {\r\n                    name: 'Opera',\r\n                    y: 0.91\r\n                }, {\r\n                    name: 'Proprietary or Undetectable',\r\n                    y: 0.2\r\n                }]\r\n            }]\r\n        };\r\n\r\n        this.barOptions =\r\n            {\r\n            chart: { type: 'bar' },\r\n                title: {\r\n                    text: 'Fruit Consumption'\r\n                },\r\n                xAxis: {\r\n                    categories: ['Apples', 'Bananas', 'Oranges']\r\n                },\r\n                yAxis: {\r\n                    title: {\r\n                        text: 'Fruit eaten'\r\n                    }\r\n                },\r\n                series: [{\r\n                    name: 'Jane',\r\n                    data: [1, 0, 4]\r\n                }, {\r\n                    name: 'John',\r\n                    data: [5, 7, 3]\r\n                }]\r\n            };\r\n\r\n        this.pieOptions = {\r\n            title: { text: 'Pie chart' },\r\n            chart: { type: 'pie' },\r\n           \r\n            series: [{\r\n                name: 'Brands',\r\n                colorByPoint: true,\r\n                data: [{\r\n                    name: 'Microsoft Internet Explorer',\r\n                    y: 56.33\r\n                }, {\r\n                    name: 'Chrome',\r\n                    y: 24.03,\r\n                    sliced: true,\r\n                    selected: true\r\n                }, {\r\n                    name: 'Firefox',\r\n                    y: 10.38\r\n                }, {\r\n                    name: 'Safari',\r\n                    y: 4.77\r\n                }, {\r\n                    name: 'Opera',\r\n                    y: 0.91\r\n                }, {\r\n                    name: 'Proprietary or Undetectable',\r\n                    y: 0.2\r\n                }]\r\n            }]\r\n        };\r\n\r\n    }\r\n\r\n    getContainerStatus = () => {\r\n        this.dashboardService.getContainerScanStatus<IContainerStatus>().subscribe(result => {\r\n            this.containerStatus = result;\r\n            console.warn(this.containerStatus);\r\n\r\n        });\r\n\r\n    }\r\n\r\n}\r\n"]}