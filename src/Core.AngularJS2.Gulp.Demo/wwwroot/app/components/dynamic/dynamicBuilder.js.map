{"version":3,"sources":["components/dynamic/dynamicBuilder.ts"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;YAWa,cAAc;gBACvB,wBAAsB,QAAqB;oBAArB,aAAQ,GAAR,QAAQ,CAAa;oBAGnC,sBAAiB,GAAkE,EAAE,CAAC;gBAD9F,CAAC;gBAGM,+CAAsB,GAA7B,UAA8B,QAAgB;oBAA9C,iBAkCC;oBA/BG,IAAI,OAAO,GAAG,IAAI,CAAC,iBAAiB,CAAC,QAAQ,CAAC,CAAC;oBAE/C,EAAE,CAAC,CAAC,OAAO,CAAC,CAAC,CAAC;wBACV,OAAO,CAAC,GAAG,CAAC,yCAAyC,CAAC,CAAA;wBAEtD,MAAM,CAAC,IAAI,OAAO,CAAC,UAAC,OAAO;4BACvB,OAAO,CAAC,OAAO,CAAC,CAAC;wBACrB,CAAC,CAAC,CAAC;oBACP,CAAC;oBAED,kDAAkD;oBAClD,IAAI,IAAI,GAAG,IAAI,CAAC,kBAAkB,CAAC,QAAQ,CAAC,CAAC;oBAC7C,IAAI,MAAM,GAAG,IAAI,CAAC,qBAAqB,CAAC,IAAI,CAAC,CAAC;oBAE9C,MAAM,CAAC,IAAI,OAAO,CAAC,UAAC,OAAO;wBACvB,KAAI,CAAC,QAAQ;6BACR,kCAAkC,CAAC,MAAM,CAAC;6BAC1C,IAAI,CAAC,UAAC,mBAAmB;4BACtB,GAAG,CAAC,CAAC,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,mBAAmB,CAAC,kBAAkB,CAAC,MAAM,EAAE,CAAC,EAAE,EAAE,CAAC;gCACrE,EAAE,CAAC,CAAC,mBAAmB,CAAC,kBAAkB,CAAC,CAAC,CAAC,CAAC,aAAa,IAAI,IAAI,CAAC,CAAC,CAAC;oCAClE,OAAO,GAAG,mBAAmB,CAAC,kBAAkB,CAAC,CAAC,CAAC,CAAC;oCACpD,KAAK,CAAC;gCACV,CAAC;4BACL,CAAC;4BACD,oFAAoF;4BAEpF,KAAI,CAAC,iBAAiB,CAAC,QAAQ,CAAC,GAAG,OAAO,CAAC;4BAE3C,OAAO,CAAC,OAAO,CAAC,CAAC;wBACrB,CAAC,CAAC,CAAC;oBACX,CAAC,CAAC,CAAC;gBACP,CAAC;gBAES,2CAAkB,GAA5B,UAA6B,IAAY;oBAMrC,IAAM,sBAAsB;wBAA5B;wBAEA,CAAC;wBAAD,6BAAC;oBAAD,CAFA,AAEC,IAAA;oBADY;wBAAR,YAAK,EAAE;;0EAAoB;oBAD1B,sBAAsB;wBAJ3B,gBAAS,CAAC;4BACP,QAAQ,EAAE,mBAAmB;4BAC7B,QAAQ,EAAE,IAAI;yBACjB,CAAC;;uBACI,sBAAsB,CAE3B;oBAAA,CAAC;oBACF,2CAA2C;oBAC3C,MAAM,CAAC,sBAAsB,CAAC;gBAClC,CAAC;gBACS,8CAAqB,GAA/B,UAAgC,aAAkB;oBAY9C,IAAM,sBAAsB;wBAA5B;wBACA,CAAC;wBAAD,6BAAC;oBAAD,CADA,AACC,IAAA;oBADK,sBAAsB;wBAX3B,eAAQ,CAAC;4BACN,OAAO,EAAE;gCACL,iCAAW;gCACX,qBAAY;6BACf;4BACD,YAAY,EAAE;gCACV,aAAa;gCACb,uBAAU;6BACb;4BACD,OAAO,EAAE,CAAE,6BAAsB,CAAC;yBACrC,CAAC;;uBACI,sBAAsB,CAC3B;oBACD,8BAA8B;oBAC9B,MAAM,CAAC,sBAAsB,CAAC;gBAClC,CAAC;gBACL,qBAAC;YAAD,CAvEA,AAuEC,IAAA;YAvEY,cAAc;gBAD1B,iBAAU,EAAE;iDAEuB,sBAAW;eADlC,cAAc,CAuE1B;;QACD,CAAC","file":"dynamicBuilder.js","sourcesContent":["import { Component, ComponentFactory, NgModule, Input, Injectable, CUSTOM_ELEMENTS_SCHEMA } from '@angular/core';\nimport { JitCompiler } from '@angular/compiler';\nimport { ChartModule } from 'angular2-highcharts';\r\nimport { FormatDate } from \"../../pipes/formatDate\";\r\nimport { CommonModule } from '@angular/common';\r\n\nexport interface IHaveDynamicData {\n    entity: any;\n}\r\n\r\n@Injectable()\r\nexport class DynamicBuilder {\r\n    constructor(protected compiler: JitCompiler) {\r\n\r\n    }\r\n    private _cacheOfFactories: { [templateKey: string]: ComponentFactory<IHaveDynamicData> } = {};\n\r\n    public createComponentFactory(template: string)\n        : Promise<ComponentFactory<IHaveDynamicData>> {\n\n        let factory = this._cacheOfFactories[template];\n\n        if (factory) {\n            console.log(\"Module and Type are returned from cache\")\n\n            return new Promise((resolve) => {\n                resolve(factory);\n            });\n        }\n\n        // unknown template ... let's create a Type for it\n        let type = this.createNewComponent(template);\n        let module = this.createComponentModule(type);\n\n        return new Promise((resolve) => {\n            this.compiler\n                .compileModuleAndAllComponentsAsync(module)\n                .then((moduleWithFactories) => {\n                    for (var i = 0; i < moduleWithFactories.componentFactories.length; i++) {\n                        if (moduleWithFactories.componentFactories[i].componentType == type) {\n                            factory = moduleWithFactories.componentFactories[i];\r\n                            break;\n                        }\n                    }\n                    //factory = _.find(moduleWithFactories.componentFactories, { componentType: type });\n\n                    this._cacheOfFactories[template] = factory;\n\n                    resolve(factory);\n                });\n        });\n    }\r\n\r\n    protected createNewComponent(tmpl: string) {\n\n        @Component({\n            selector: 'dynamic-component',\n            template: tmpl,\n        })\n        class CustomDynamicComponent implements IHaveDynamicData {\n            @Input() public entity: any;\n        };\n        // a component for this particular template\n        return CustomDynamicComponent;\n    }\n    protected createComponentModule(componentType: any) {\n        @NgModule({\n            imports: [\n                ChartModule, \n                CommonModule \n            ],\n            declarations: [\n                componentType,\n                FormatDate,\n            ],\n            schemas: [ CUSTOM_ELEMENTS_SCHEMA]\n        })\n        class RuntimeComponentModule {\n        }\n        // a module for just this Type\n        return RuntimeComponentModule;\n    }\r\n}\r\n"]}