{"version":3,"sources":["interfaces/interfaces.ts"],"names":[],"mappings":";;;;;;QA4BA,CAAC","file":"interfaces.js","sourcesContent":["import { Injectable } from \"@angular/core\";\r\nimport { Observable } from \"rxjs/Observable\";\r\nimport { IResponse, IContainerDetail, Role, ILoginDetail } from \"../models/viewModels\";\r\n\r\nexport interface IWebRequest {\r\n    get: <T>(url: string, data?: any, header?: any, goToErrorState?: boolean) => Observable<T>;\r\n    post: <T>(url: string, data?: any, header?: any, goToErrorState?: boolean) => Observable<T>;\r\n    getImage: <T>(url: string, data?: any, header?: any, goToErrorState?: boolean) => any;\r\n}\r\n\r\nexport interface IDashboardService {\r\n    getContainerScanStatus: <ContainerScanned>() => Observable<ContainerScanned>;\r\n    getMyRoles: () => Observable<Role[]>;\r\n    getMyRole: (number) => Observable<Role>;\r\n}\r\n\r\nexport interface IImageService {\r\n    getImagePath: () => Observable<IContainerDetail>;\r\n    getImageAsBase64: () => Observable<IContainerDetail>;\r\n    getImageAsByteArrray: () => Observable<any>;\r\n}\r\n\r\n\r\nexport interface ILoginService {\r\n    LoginDetail: ILoginDetail;\r\n\r\n    login: (userName: string, password: string) => Observable<ILoginDetail>\r\n}\r\n"]}