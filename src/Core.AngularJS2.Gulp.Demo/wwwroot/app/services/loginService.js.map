{"version":3,"sources":["services/loginService.ts"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;YAOa,YAAY;gBAUrB,sBAA4C,UAAuB;oBAAvB,eAAU,GAAV,UAAU,CAAa;oBAT3D,gBAAW,GAAiB,EAAE,WAAW,EAAE,EAAE,EAAE,UAAU,EAAE,KAAK,EAAE,QAAQ,EAAE,EAAE,EAAE,OAAO,EAAG,IAAI,IAAI,EAAE,EAAE,YAAY,EAAG,IAAI,IAAI,EAAE,EAAE,MAAM,EAAG,QAAQ,EAAE,CAAC;oBAUzJ,IAAI,EAAE,GAAG,IAAI,CAAC;oBACd,EAAE,CAAC,KAAK,GAAG,UAAe,QAAgB,EAAE,QAAgB;wBACxD,MAAM,CAAC,UAAU,CAAC,GAAG,CAAe,kCAAkC,EAAE,EAAE,QAAQ,EAAE,QAAQ,EAAE,QAAQ,EAAE,QAAQ,EAAC,CAAC,CAAC;oBACvH,CAAC,CAAA;gBAEL,CAAC;gBAZD,sBAAI,qCAAW;yBAAf;wBACI,MAAM,CAAC,IAAI,CAAC,WAAW,CAAC;oBAC5B,CAAC;yBACD,UAAgB,KAAmB;wBAC/B,IAAI,CAAC,WAAW,GAAG,KAAK,CAAC;oBAC7B,CAAC;;;mBAHA;gBAWL,mBAAC;YAAD,CAjBA,AAiBC,IAAA;YAjBY,YAAY;gBADxB,iBAAU,EAAE;gBAWK,WAAA,aAAM,CAAC,aAAa,CAAC,CAAA;;eAV1B,YAAY,CAiBxB;;QACD,CAAC","file":"loginService.js","sourcesContent":["import { Injectable, Inject, Injector } from \"@angular/core\";\r\nimport { Observable } from \"rxjs/Observable\";\r\nimport { IResponse, ILoginDetail } from \"../models/viewModels\";\r\nimport { IWebRequest, ILoginService } from \"../interfaces/interfaces\";\r\nimport { WebRequest } from \"../services/webRequest\";\r\n\r\n@Injectable()\r\nexport class LoginService implements ILoginService {\r\n    private loginDetail: ILoginDetail = { accessToken: \"\", isLoggedIn: false, userName: \"\", expires : new Date(), loggedinDate : new Date(), userId : 'cgupta' };\r\n\r\n    login: <ILoginDetail>(userName: string, password: string) => Observable<ILoginDetail>;\r\n    get LoginDetail(): ILoginDetail {\r\n        return this.loginDetail;\r\n    }\r\n    set LoginDetail(value: ILoginDetail) {\r\n        this.loginDetail = value;\r\n    }\r\n    constructor( @Inject('IWebRequest') private webRequest: IWebRequest) {\r\n        var vm = this;\r\n        vm.login = <ILoginDetail>(userName: string, password: string) => {\r\n            return webRequest.get<ILoginDetail>(\"http://localhost:53920/api/login\", { userName: userName, password: password});\r\n        }\r\n\r\n    }\r\n}\r\n"]}